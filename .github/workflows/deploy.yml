name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy code to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh

            # Define directories
            BASE_DIR="/var/www/dotheg"
            APP_DIR="$BASE_DIR/dotheg-api"
            WEB_DIR="$BASE_DIR/dotheg-web"

            echo "------------------------------------"
            echo "|        Updating Code             |"
            echo "------------------------------------"

            # Try to update and build the code
            if cd $BASE_DIR && \
               git pull origin main && \
               cd $APP_DIR && \
               pm2 stop ecosystem.config.js && \
               cd $WEB_DIR && \
               npm install && \
               npm run build && \
               cd $APP_DIR && \
               npm install && \
               npm run prisma:migrate && \
               npm run build && \
               pm2 start ecosystem.config.js; then
              
              echo "------------------------------------"
              echo "|      Deployment Successful       |"
              echo "------------------------------------"
              
              # Delete the backup we just created since deployment was successful
              rm -rf $BACKUP_DIR/backup_$TIMESTAMP
              echo "Backup deleted as deployment was successful"
            else
              echo "------------------------------------"
              echo "|      Deployment Failed           |"
              echo "|      Starting Rollback          |"
              echo "------------------------------------"
              exit 1
            fi

          # Disable SSH host key checking
          options: "-o StrictHostKeyChecking=no"
